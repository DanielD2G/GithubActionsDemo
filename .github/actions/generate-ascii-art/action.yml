name: 'Generate Random ASCII Art'
description: 'Genera arte ASCII aleatorio usando Python y lo inserta en el README'
author: 'Daniel'

inputs:
  readme-path:
    description: 'Ruta al archivo README'
    required: false
    default: 'README.md'
  python-version:
    description: 'VersiÃ³n de Python a usar'
    required: false
    default: '3.11'
  art-text:
    description: 'Texto para generar el arte ASCII'
    required: false
    default: 'GitHub'
  art-type:
    description: 'Tipo de arte a generar (text, coffee, dog, cat, butterfly, random)'
    required: false
    default: 'text'

outputs:
  art-generated:
    description: 'Indica si el arte fue generado exitosamente'
    value: ${{ steps.generate.outputs.generated }}

runs:
  using: 'composite'
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install dependencies
      shell: bash
      run: |
        echo "ðŸ“¦ Instalando dependencias de Python..."
        pip install art --quiet

    - name: Generate ASCII Art
      id: generate
      shell: bash
      env:
        ART_TEXT: ${{ inputs.art-text }}
        ART_TYPE: ${{ inputs.art-type }}
      run: |
        README_FILE="${{ inputs.readme-path }}"

        echo "ðŸŽ¨ Generando arte ASCII con tipo: $ART_TYPE"

        python3 << 'PYTHON_SCRIPT'
        import os
        import random
        from datetime import datetime
        from art import text2art, art, tprint

        art_text = os.environ.get('ART_TEXT', 'GitHub')
        art_type_input = os.environ.get('ART_TYPE', 'text')

        fonts = ["random", "rnd-medium", "rnd-small", "standard", "tarty1"]

        # Generar el arte segÃºn el tipo especificado
        if art_type_input == 'text':
            # Generar texto artÃ­stico con una fuente aleatoria
            selected_font = random.choice(fonts)
            try:
                ascii_text = text2art(art_text, font=selected_font)
                art_type = f"text2art({art_text}, font={selected_font})"
            except:
                # Si falla, usar la fuente por defecto (sin especificar)
                ascii_text = text2art(art_text)
                art_type = f"text2art({art_text})"
        elif art_type_input == 'random':
            # Modo aleatorio: elegir entre texto o arte predefinido
            if random.random() > 0.5:
                selected_font = random.choice(fonts)
                try:
                    ascii_text = text2art(art_text, font=selected_font)
                    art_type = f"text2art({art_text}, font={selected_font})"
                except:
                    ascii_text = text2art(art_text)
                    art_type = f"text2art({art_text})"
            else:
                art_names = ["coffee", "dog", "cat", "butterfly"]
                selected_art = random.choice(art_names)
                try:
                    ascii_text = art(selected_art)
                    art_type = f"art({selected_art})"
                except:
                    ascii_text = text2art(art_text)
                    art_type = f"text2art({art_text})"
        else:
            # Usar arte predefinido (coffee, dog, cat, butterfly)
            try:
                ascii_text = art(art_type_input)
                art_type = f"art({art_type_input})"
            except:
                # Si falla, usar texto por defecto
                ascii_text = text2art(art_text)
                art_type = f"text2art({art_text}) [fallback]"

        timestamp = datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S UTC")

        # Guardar en archivo temporal
        with open("/tmp/ascii_art.txt", "w") as f:
            f.write(f"Generado: {timestamp}\n")
            f.write(f"Tipo: {art_type}\n\n")
            f.write(ascii_text)

        print(f"âœ… Arte generado: {art_type}")
        PYTHON_SCRIPT

        echo "generated=true" >> $GITHUB_OUTPUT

    - name: Update README with ASCII Art
      shell: bash
      run: |
        README_FILE="${{ inputs.readme-path }}"

        # Leer el arte generado
        ART_CONTENT=$(cat /tmp/ascii_art.txt)

        # Crear archivo temporal con el contenido actualizado
        awk -v art="$ART_CONTENT" '
          /<!-- ASCII_ART_START -->/ {
            print
            print "```"
            print art
            print "```"
            skip=1
            next
          }
          /<!-- ASCII_ART_END -->/ {
            skip=0
            print
            next
          }
          !skip {print}
        ' "$README_FILE" > "${README_FILE}.tmp"

        mv "${README_FILE}.tmp" "$README_FILE"

        echo "âœ… README actualizado con el arte ASCII"

    - name: Show summary
      shell: bash
      run: |
        echo "### ðŸŽ¨ Arte ASCII Generado" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat /tmp/ascii_art.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
